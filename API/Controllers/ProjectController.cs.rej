diff a/API/Controllers/ProjectController.cs b/API/Controllers/ProjectController.cs	(rejected hunks)
@@ -41,24 +41,30 @@
             await taskListComplete.AsNoTracking().ToListAsync();
             var count = taskList.GroupBy(e => e.ProjectId).Select(e => new { ProjectId = e.Key, Count = e.Count() });
             var countTaskComplete = taskListComplete.GroupBy(e => e.ProjectId).Select(e => new { ProjectId = e.Key, Count = e.Count() });
-            var projectList = await _dataContext.AppUser.Where(e => e.PermissionCode == Permission.Leader).Join(_dataContext.Project,
-                    u => u.DepartmentId, p => p.DepartmentId, (u, p) => new GetAllProjectForViewDto
-                    {
-                        Id = p.Id,
-                        ProjectName = p.ProjectName,
-                        Description = p.Description,
-                        ProjectType = p.ProjectType,
-                        ProjectCode = p.ProjectCode,
-                        CreateDate = p.CreateDate,
-                        DeadlineDate = p.DeadlineDate,
-                        CompleteDate = p.CompleteDate,
-                        DayLefts = (p.DeadlineDate - DateTime.Now).Days,
-                        PriorityCode = p.PriorityCode,
-                        StatusCode = p.StatusCode,
-                        DepartmentId = p.DepartmentId,
-                        AppUserId = u.Id,
-                        LeaderName = u.FirstName + " " + u.LastName,
-                    }).AsNoTracking().ToListAsync();
+            var projectList = from u in _dataContext.AppUser
+                              join d in _dataContext.Department
+                              on u.DepartmentId equals d.Id
+                              join p in _dataContext.Project
+                              on d.Id equals p.DepartmentId
+                              where u.PermissionCode == Permission.Leader
+                              select new GetAllProjectForViewDto
+                              {
+                                  Id = p.Id,
+                                  ProjectName = p.ProjectName,
+                                  Description = p.Description,
+                                  ProjectType = p.ProjectType,
+                                  ProjectCode = p.ProjectCode,
+                                  CreateDate = p.CreateDate,
+                                  DeadlineDate = p.DeadlineDate,
+                                  CompleteDate = p.CompleteDate,
+                                  DayLefts = (p.DeadlineDate - DateTime.Now).Days,
+                                  PriorityCode = p.PriorityCode,
+                                  StatusCode = p.StatusCode,
+                                  DepartmentId = p.DepartmentId,
+                                  AppUserId = u.Id,
+                                  LeaderName = u.FirstName + " " + u.LastName,
+                              };
+            await projectList.AsNoTracking().ToListAsync();
             foreach (var item in projectList)
             {
                 foreach (var num in count)
@@ -104,26 +110,30 @@
                                };
                 await taskList.AsNoTracking().ToListAsync();
                 var count = taskList.GroupBy(e => e.ProjectId).Select(e => new { ProjectId = e.Key, Count = e.Count() });
-                var projectList = await _dataContext.AppUser.Where(e => e.DepartmentId == departmentId && e.PermissionCode == Permission.Leader)
-                    .Join(_dataContext.Project, u => u.DepartmentId, p => p.DepartmentId, (u, p) =>
-                         new GetAllProjectForViewDto
-                         {
-                             Id = p.Id,
-                             ProjectName = p.ProjectName,
-                             Description = p.Description,
-                             ProjectType = p.ProjectType,
-                             ProjectCode = p.ProjectCode,
-                             CreateDate = p.CreateDate,
-                             DeadlineDate = p.DeadlineDate,
-                             CompleteDate = p.CompleteDate,
-                             DayLefts = (p.DeadlineDate - DateTime.Now).Days,
-                             PriorityCode = p.PriorityCode,
-                             StatusCode = p.StatusCode,
-                             DepartmentId = p.DepartmentId,
-                             AppUserId = u.Id,
-                             LeaderName = u.FirstName + " " + u.LastName,
-                         })
-                    .AsNoTracking().ToListAsync();
+                var projectList = from u in _dataContext.AppUser
+                                  join d in _dataContext.Department
+                                  on u.DepartmentId equals d.Id
+                                  join p in _dataContext.Project
+                                  on d.Id equals p.DepartmentId
+                                  where u.PermissionCode == Permission.Leader && u.DepartmentId == departmentId
+                                  select new GetAllProjectForViewDto
+                                  {
+                                      Id = p.Id,
+                                      ProjectName = p.ProjectName,
+                                      Description = p.Description,
+                                      ProjectType = p.ProjectType,
+                                      ProjectCode = p.ProjectCode,
+                                      CreateDate = p.CreateDate,
+                                      DeadlineDate = p.DeadlineDate,
+                                      CompleteDate = p.CompleteDate,
+                                      DayLefts = (p.DeadlineDate - DateTime.Now).Days,
+                                      PriorityCode = p.PriorityCode,
+                                      StatusCode = p.StatusCode,
+                                      DepartmentId = p.DepartmentId,
+                                      AppUserId = u.Id,
+                                      LeaderName = u.FirstName + " " + u.LastName,
+                                  };
+                await projectList.AsNoTracking().ToListAsync();
                 foreach (var item in projectList)
                 {
                     foreach (var num in count)
